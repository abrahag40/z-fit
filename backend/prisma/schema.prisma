generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(cuid())
  email          String        @unique
  name           String?
  passwordHash   String
  role           Role          @default(CLIENT)
  isActive       Boolean       @default(true)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  lastLoginAt    DateTime?
  memberships    Membership[]  // 1:N
  checkins       Checkin[]     // ðŸ‘ˆ 1:N nueva relaciÃ³n
}

model Membership {
  id            String            @id @default(cuid())
  userId        String
  type          String
  startDate     DateTime
  endDate       DateTime
  status        MembershipStatus  @default(ACTIVE)
  price         Float?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  user          User              @relation(fields: [userId], references: [id])
  checkins      Checkin[]         // ðŸ‘ˆ nueva relaciÃ³n
  @@index([userId])
  @@map("memberships")
}

enum Role {
  ADMIN
  STAFF
  CLIENT
}

enum MembershipStatus {
  ACTIVE
  EXPIRED
  FROZEN
  CANCELLED
}

enum CheckinStatus {
  ALLOWED
  DENIED
}

model Checkin {
  id            String         @id @default(cuid())
  userId        String
  membershipId  String?
  timestamp     DateTime       @default(now())
  status        CheckinStatus  @default(ALLOWED)
  notes         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  user          User           @relation(fields: [userId], references: [id])
  membership    Membership?    @relation(fields: [membershipId], references: [id])

  @@index([userId])
  @@index([membershipId])
  @@map("checkins")
}